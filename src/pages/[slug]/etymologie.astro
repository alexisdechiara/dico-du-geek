---
const { slug } = Astro.params;

import Layout from "../../layouts/Layout.astro";
import Content from "../../layouts/Content.astro";
import ContentHeader from "../../components/Content/ContentHeader.astro";
import { Markdown } from "astro-remote";
import { fetchEtymology } from "../../utils/fetchEtymology";
import Tag from "../../components/Tag.astro";

let data;

try {
	data = await fetchEtymology(slug);
} catch (error) {
	return Astro.redirect('/404');
}
const page = "etymology";
const uniqueArticle = data.articles == null || data.articles.length === 1;
---

<Layout title={"Le dico du geek | " + data.title}>
	<Content page={page}>
		<h1 class="sr-only">{data.title}</h1>
		{
			uniqueArticle ? (
				<ContentHeader page={page} title={data.articles[0].abbreviation ? `${data.articles[0].entry} (${data.articles[0].abbreviation})` : data.articles[0].entry} />
			) : (
				<ContentHeader page={page} title={data.title} />
			)
		}
		<h2 class="sr-only">Ã‰tymologie</h2>
		{
			data.articles.map(article => (
				<div class="mb-6">
					<ContentHeader hidden={uniqueArticle} page={page} title={article.entry} subtitle />
					{article.etymologies.map((etymology, index) => (
						<>
							{
								article.etymologies.length > 1 && (
									<Tag page={page} text={String(index + 1)} customClass="my-4" />
								)
							}
						</>
						<article class="mb-16 prose prose-etymology text-paragraph text-justify">
							<Markdown content={etymology as string} components={{ h1: "h3", h2: "h4" }} />
						</article>
					))}
				</div>
			))
		}
	</Content>
</Layout>
